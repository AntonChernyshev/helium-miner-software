name: BalenaCloud Deploy (Testnet)

on:
  push:
    # Only run workflow for pushes to specific branches
    branches:
      - master
    paths-ignore:
      - 'device-compose-files/**'

jobs:
  testnet:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sbc: [raspi, rockpi, rak]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Export short SHA of current commit
        run: |
          FIRMWARE_SHORT_HASH=$( echo ${GITHUB_SHA:0:7} )
          echo "FIRMWARE_SHORT_HASH=$FIRMWARE_SHORT_HASH" >> $GITHUB_ENV
      - name: Random sleep (balena API workaround)
        run:  sleep $[ ( $RANDOM % 180 )  + 1 ]s
      - name: Generate Docker Compose for RockPi
        if: matrix.sbc == 'rockpi'
        run: |
          python gen_docker_compose.py rockpi -o device-compose-files/docker-compose-rockpi.yml
          cp device-compose-files/docker-compose-rockpi.yml docker-compose.yml
          ROCKPI="-rockpi"
          echo "ROCKPI=$ROCKPI" >> $GITHUB_ENV
      - name: Generate Docker Compose for RaspberryPi & RAK
        if: matrix.sbc == 'raspi' || matrix.sbc == 'rak'
        run: |
          python gen_docker_compose.py rpi -o device-compose-files/docker-compose-rpi.yml
          cp device-compose-files/docker-compose-rpi.yml docker-compose.yml
      - name: Balena Deploy (ROCK Pi)
        uses: nebraltd/balena-cli-action@v13.1.10
        if: matrix.sbc == 'rockpi' && success()
        with:
          balena_api_token: ${{secrets.BALENA_API_TOKEN}}
          balena_command: "deploy nebraltd/helium-testnet${{ env.ROCKPI }} --logs --debug --nocache --build"
      - name: Balena Deploy (RasPi)
        uses: nebraltd/balena-cli-action@v13.1.10
        if: matrix.sbc == 'raspi' && success()
        with:
          balena_api_token: ${{secrets.BALENA_API_TOKEN_1}}
          balena_command: "deploy nebraltd/helium-testnet --logs --debug --nocache --build"
      - name: Balena Deploy (RAK)
        uses: nebraltd/balena-cli-action@v13.1.10
        if: matrix.sbc == 'rak' && success()
        with:
          balena_api_token: ${{secrets.BALENA_API_TOKEN_2}}
          balena_command: "deploy nebraltd/helium-testnet-rak --logs --debug --nocache --build"
      - name: Push updated docker compose file (ROCK Pi)
        if: matrix.sbc == 'rockpi' && success()
        uses: test-room-7/action-update-file@v1
        with:
          branch: master
          file-path: device-compose-files/docker-compose-rockpi.yml
          commit-msg: Update ROCK Pi docker compose output
          github-token: ${{ secrets.MR_BUMP }}
      - name: Push updated docker compose file (RasPi & RAK)
        if: (matrix.sbc == 'raspi' || matrix.sbc == 'rak') && success()
        uses: test-room-7/action-update-file@v1
        with:
          branch: master
          file-path: device-compose-files/docker-compose-rpi.yml
          commit-msg: Update Raspberry Pi docker compose output              
          github-token: ${{ secrets.MR_BUMP }}
