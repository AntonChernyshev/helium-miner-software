name: BalenaCloud Deploy (Testnet - Draft Deploy)

on:
  workflow_dispatch:

jobs:
  testnet:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sbc: [raspi, rockpi]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Random sleep (balena API workaround)
        run:  sleep $[ ( $RANDOM % 180 )  + 1 ]s
      - name: Generate Docker Compose for RockPi
        if: matrix.sbc == 'rockpi'
        run: |
          python gen_docker_compose.py rockpi -o sample_output/rockpi.yml
          rm docker-compose.yml
          cp sample_output/rockpi.yml docker-compose.yml
          ROCKPI="-rockpi"
          echo "ROCKPI=$ROCKPI" >> $GITHUB_ENV
      - name: Generate Docker Compose for RaspberryPi
        if: matrix.sbc == 'raspi'
        run: |
          python gen_docker_compose.py rpi -o sample_output/rpi.yml
          rm docker-compose.yml
          cp sample_output/rpi.yml docker-compose.yml
      - name: Balena Deploy (ROCK Pi)
        uses: nebraltd/balena-cli-action@v13.1.10
        if: matrix.sbc == 'rockpi' && success()
        with:
          balena_api_token: ${{secrets.BALENA_API_TOKEN}}
          balena_command: "deploy nebraltd/helium-testnet${{ env.ROCKPI }} --logs --debug --nocache --build --draft"
      - name: Balena Deploy (RasPi)
        uses: nebraltd/balena-cli-action@v13.1.10
        if: matrix.sbc == 'raspi' && success()
        with:
          balena_api_token: ${{secrets.BALENA_API_TOKEN_1}}
          balena_command: "deploy nebraltd/helium-testnet --logs --debug --nocache --build --draft"
