name: BalenaCloud Deploy (Production - Draft Deploy)

on:
  workflow_dispatch:

jobs:
  build-prod:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sbc: [raspi, rockpi]
        frequency: [470, 868, 915]
        variant: [indoor, outdoor]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: production
      - name: Random sleep (balena API workaround)
        run:  sleep $[ ( $RANDOM % 180 )  + 1 ]s
      - name: Generate Docker Compose for RockPi
        if: matrix.sbc == 'rockpi'
        run: |
          python gen_docker_compose.py rockpi -o docker-compose.yml
          ROCKPI="-rockpi"
          echo "ROCKPI=$ROCKPI" >> $GITHUB_ENV
      - name: Generate Docker Compose for RaspberryPi
        if: matrix.sbc == 'raspi'
        run: |
          python gen_docker_compose.py rpi -o docker-compose.yml
      - name: Balena Deploy (ROCK Pi)
        if: matrix.sbc == 'rockpi' && success()
        uses: nebraltd/balena-cli-action@v13.1.10
        with:
          balena_api_token: ${{secrets.BALENA_API_TOKEN}}
          balena_command: "deploy nebraltd/helium-${{ matrix.variant }}-${{ matrix.frequency }}${{ env.ROCKPI }} --logs --debug --nocache --build --draft"
      - name: Balena Deploy (RasPi)
        if: matrix.sbc == 'raspi' && success()
        uses: nebraltd/balena-cli-action@v13.1.10
        with:
          balena_api_token: ${{secrets.BALENA_API_TOKEN_1}}
          balena_command: "deploy nebraltd/helium-${{ matrix.variant }}-${{ matrix.frequency }} --logs --debug --nocache --build --draft"

  open-fleet:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: production
      - name: Random sleep (balena API workaround)
        run:  sleep $[ ( $RANDOM % 180 )  + 1 ]s
      - name: Generate Docker Compose for RaspberryPi
        run: |
          python gen_docker_compose.py rpi -o docker-compose.yml
      - name: Balena Deploy
        uses: nebraltd/balena-cli-action@v13.1.10
        if: success()
        with:
          balena_api_token: ${{secrets.BALENA_API_TOKEN_2}}
          balena_command: "deploy nebraltd/helium-miner --logs --debug --nocache --build --draft"

  commercial:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: production
      - name: Random sleep (balena API workaround)
        run:  sleep $[ ( $RANDOM % 180 )  + 1 ]s
      - name: Generate Docker Compose for RaspberryPi
        run: |
          python gen_docker_compose.py rpi -o docker-compose.yml
      - name: Balena Deploy
        uses: nebraltd/balena-cli-action@v13.1.10
        if: success()
        with:
          balena_api_token: ${{secrets.BALENA_API_TOKEN_3}}
          balena_command: "deploy nebraltd/helium-miner-commercial --logs --debug --nocache --build --draft"
