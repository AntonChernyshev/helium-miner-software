name: BalenaCloud Deploy (Production - New Fleets)

on:
  push:
    # Only run workflow for pushes to specific branches
    branches:
      - production

jobs:
  build-prod:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        variant: [nebra-indoor1, nebra-outdoor1, nebra-indoor2] # TODO add nebra-light2 later

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: production
      - name: Setup Python Libraries
        run: pip install -r requirements.txt
      - name: Export short SHA of current commit
        shell: bash
        run: |
          FIRMWARE_SHORT_HASH=$( echo ${GITHUB_SHA:0:7} )
          echo "FIRMWARE_SHORT_HASH=$FIRMWARE_SHORT_HASH" >> $GITHUB_ENV

          # Get the latest GA release and branch
          source <(grep FIRMWARE_VERSION settings.ini)
          LATEST_GA=$FIRMWARE_VERSION
          GITHUB_BRANCH=$( echo "${{ github.ref }}" | sed 's/refs\/heads\///g' )

          echo "LATEST_GA=$LATEST_GA" >> $GITHUB_ENV
          echo "GITHUB_BRANCH=$GITHUB_BRANCH" >> $GITHUB_ENV
      - name: Random sleep (balena API workaround)
        run:  sleep $[ ( $RANDOM % 540 ) + 1 ]s
      - name: Generate Docker Compose
        run: |
          python gen_docker_compose_by_variant.py ${{matrix.variant}} -o docker-compose.yml
      - name: Balena Deploy
        uses: nebraltd/balena-cli-action@v15.0.3-1
        with:
          balena_api_token: ${{secrets.BALENA_API_TOKEN_1}}
          balena_command: "deploy nebraltd/helium-${{matrix.variant}} --debug --nocache --build"
